Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 F: %empty

    3 W: %empty

    4 D: %empty

    5 X: %empty

    6 N: %empty

    7 changetable: %empty

    8 primary_expression: IDENTIFIER
    9                   | INT_CONSTANT
   10                   | FLOAT_CONSTANT
   11                   | CHAR_CONSTANT
   12                   | STRING_LITERAL
   13                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

   14 postfix_expression: primary_expression
   15                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   16                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   17                   | postfix_expression DOT IDENTIFIER
   18                   | postfix_expression ARROW IDENTIFIER
   19                   | postfix_expression INCREMENT
   20                   | postfix_expression DECREMENT
   21                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   23 argument_expression_list_opt: argument_expression_list
   24                             | %empty

   25 argument_expression_list: assignment_expression
   26                         | argument_expression_list COMMA assignment_expression

   27 unary_expression: postfix_expression
   28                 | INCREMENT unary_expression
   29                 | DECREMENT unary_expression
   30                 | unary_operator cast_expression
   31                 | SIZEOF unary_expression
   32                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   33 unary_operator: BITWISE_AND
   34               | MUL
   35               | PLUS
   36               | MINUS
   37               | BITWISE_NOT
   38               | EXCLAIM

   39 cast_expression: unary_expression
   40                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression MUL cast_expression
   43                          | multiplicative_expression DIV cast_expression
   44                          | multiplicative_expression MOD cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression PLUS multiplicative_expression
   47                    | additive_expression MINUS multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression LEFTSHIFT additive_expression
   50                 | shift_expression RIGHTSHIFT additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression LESSTHAN shift_expression
   53                      | relational_expression GREATERTHAN shift_expression
   54                      | relational_expression LESSTHANEQUAL shift_expression
   55                      | relational_expression GREATERTHANEQUAL shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQUALEQUAL relational_expression
   58                    | equality_expression NOTEQUAL relational_expression

   59 and_expression: equality_expression
   60               | and_expression BITWISE_AND equality_expression

   61 exclusive_or_expression: and_expression
   62                        | exclusive_or_expression BITWISE_XOR and_expression

   63 inclusive_or_expression: exclusive_or_expression
   64                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   65 logical_and_expression: inclusive_or_expression
   66                       | logical_and_expression AND M inclusive_or_expression

   67 logical_or_expression: logical_and_expression
   68                      | logical_or_expression OR M logical_and_expression

   69 conditional_expression: logical_or_expression
   70                       | logical_or_expression N QUESTION M expression N COLON M conditional_expression

   71 assignment_expression: conditional_expression
   72                      | unary_expression assignment_operator assignment_expression

   73 assignment_operator: ASSIGN
   74                    | MULTIPLYASSIGN
   75                    | DIVIDEASSIGN
   76                    | MODASSIGN
   77                    | ADDASSIGN
   78                    | SUBTRACTASSIGN
   79                    | LEFTSHIFTASSIGN
   80                    | RIGHTSHIFTASSIGN
   81                    | ANDASSIGN
   82                    | XORASSIGN
   83                    | ORASSIGN

   84 expression: assignment_expression
   85           | expression COMMA assignment_expression

   86 constant_expression: conditional_expression

   87 declaration: declaration_specifiers init_declarator_list SEMICOLON
   88            | declaration_specifiers SEMICOLON

   89 declaration_specifiers: storage_class_specifier declaration_specifiers
   90                       | storage_class_specifier
   91                       | type_specifier declaration_specifiers
   92                       | type_specifier
   93                       | type_qualifier declaration_specifiers
   94                       | type_qualifier
   95                       | function_specifier declaration_specifiers
   96                       | function_specifier

   97 init_declarator_list: init_declarator
   98                     | init_declarator_list COMMA init_declarator

   99 init_declarator: declarator
  100                | declarator ASSIGN initializer

  101 storage_class_specifier: EXTERN
  102                        | STATIC
  103                        | AUTO
  104                        | REGISTER

  105 type_specifier: VOID
  106               | CHAR
  107               | SHORT
  108               | INT
  109               | LONG
  110               | FLOAT
  111               | DOUBLE
  112               | SIGNED
  113               | UNSIGNED
  114               | BOOL
  115               | COMPLEX
  116               | IMAGINARY
  117               | enum_specifier

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  119                         | type_qualifier specifier_qualifier_list_opt

  120 specifier_qualifier_list_opt: %empty
  121                             | specifier_qualifier_list

  122 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  123               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  124               | ENUM IDENTIFIER

  125 identifier_opt: %empty
  126               | IDENTIFIER

  127 enumerator_list: enumerator
  128                | enumerator_list COMMA enumerator

  129 enumerator: IDENTIFIER
  130           | IDENTIFIER ASSIGN constant_expression

  131 type_qualifier: CONST
  132               | RESTRICT
  133               | VOLATILE

  134 function_specifier: INLINE

  135 declarator: pointer direct_declarator
  136           | direct_declarator

  137 direct_declarator: IDENTIFIER
  138                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  139                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  140                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  141                  | direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  142                  | direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  143                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  145                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  146                  | direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  147                  | direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  148                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  149                  | direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE

  150 type_qualifier_list_opt: %empty
  151                        | type_qualifier_list

  152 pointer: MUL type_qualifier_list_opt
  153        | MUL type_qualifier_list_opt pointer

  154 type_qualifier_list: type_qualifier
  155                    | type_qualifier_list type_qualifier

  156 parameter_type_list: parameter_list
  157                    | parameter_list COMMA ELLIPSIS

  158 parameter_list: parameter_declaration
  159               | parameter_list COMMA parameter_declaration

  160 parameter_declaration: declaration_specifiers declarator
  161                      | declaration_specifiers

  162 identifier_list: IDENTIFIER
  163                | identifier_list COMMA IDENTIFIER

  164 type_name: specifier_qualifier_list

  165 initializer: assignment_expression
  166            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  168 initializer_list: designation_opt initializer
  169                 | initializer_list COMMA designation_opt initializer

  170 designation_opt: %empty
  171                | designation

  172 designation: designator_list ASSIGN

  173 designator_list: designator
  174                | designator_list designator

  175 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  176           | DOT IDENTIFIER

  177 statement: labeled_statement
  178          | compound_statement
  179          | expression_statement
  180          | selection_statement
  181          | iteration_statement
  182          | jump_statement

  183 loop_statement: labeled_statement
  184               | expression_statement
  185               | selection_statement
  186               | iteration_statement
  187               | jump_statement

  188 labeled_statement: IDENTIFIER COLON M statement
  189                  | CASE constant_expression COLON statement
  190                  | DEFAULT COLON statement

  191 compound_statement: CURLY_BRACKET_OPEN X changetable block_item_list_opt CURLY_BRACKET_CLOSE

  192 block_item_list_opt: %empty
  193                    | block_item_list

  194 block_item_list: block_item
  195                | block_item_list M block_item

  196 block_item: declaration
  197           | statement

  198 expression_statement: expression SEMICOLON
  199                     | SEMICOLON

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  201                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement
  202                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE
  205                    | DO D M loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  206                    | DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  207                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  211 jump_statement: GOTO IDENTIFIER SEMICOLON
  212               | CONTINUE SEMICOLON
  213               | BREAK SEMICOLON
  214               | RETURN expression SEMICOLON
  215               | RETURN SEMICOLON

  216 translation_unit: external_declaration
  217                 | translation_unit external_declaration

  218 external_declaration: function_definition
  219                     | declaration

  220 function_definition: declaration_specifiers declarator declaration_list_opt changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  221 declaration_list: declaration
  222                 | declaration_list declaration

  223 declaration_list_opt: %empty
  224                     | declaration_list


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 103
    RESTRICT (259) 132
    REGISTER (260) 104
    BREAK (261) 213
    CASE (262) 189
    CHAR (263) 106
    CONST (264) 131
    CONTINUE (265) 212
    DEFAULT (266) 190
    DO (267) 205 206
    DOUBLE (268) 111
    ELSE (269) 201
    ENUM (270) 122 123 124
    EXTERN (271) 101
    FLOAT (272) 110
    FOR (273) 207 208 209 210
    GOTO (274) 211
    IF (275) 200 201
    INLINE (276) 134
    INT (277) 108
    LONG (278) 109
    RETURN (279) 214 215
    SHORT (280) 107
    SIGNED (281) 112
    SIZEOF (282) 31 32
    STATIC (283) 102 143 144
    STRUCT (284)
    SWITCH (285) 202
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 113
    VOID (289) 105
    VOLATILE (290) 133
    WHILE (291) 203 204 205 206
    BOOL (292) 114
    COMPLEX (293) 115
    IMAGINARY (294) 116
    IDENTIFIER <symp> (295) 8 17 18 124 126 129 130 137 162 163 176 188 211
    INT_CONSTANT <intval> (296) 9
    FLOAT_CONSTANT <char_value> (297) 10
    CHAR_CONSTANT <char_value> (298) 11
    STRING_LITERAL <char_value> (299) 12
    SQUARE_BRACKET_OPEN (300) 15 139 140 141 142 143 144 145 146 175
    SQUARE_BRACKET_CLOSE (301) 15 139 140 141 142 143 144 145 146 175
    ROUND_BRACKET_OPEN (302) 13 16 21 22 32 40 138 147 148 149 200 201 202 203 204 205 206 207 208 209 210
    ROUND_BRACKET_CLOSE (303) 13 16 21 22 32 40 138 147 148 149 200 201 202 203 204 205 206 207 208 209 210
    CURLY_BRACKET_OPEN (304) 21 22 122 123 166 167 191 204 206 209 210 220
    CURLY_BRACKET_CLOSE (305) 21 22 122 123 166 167 191 204 206 209 210 220
    DOT (306) 17 176
    ARROW (307) 18
    INCREMENT (308) 19 28
    DECREMENT (309) 20 29
    BITWISE_AND (310) 33 60
    MUL (311) 34 42 145 146 152 153
    PLUS (312) 35 46
    MINUS (313) 36 47
    BITWISE_NOT (314) 37
    EXCLAIM (315) 38
    DIV (316) 43
    MOD (317) 44
    LEFTSHIFT (318) 49
    RIGHTSHIFT (319) 50
    LESSTHAN (320) 52
    GREATERTHAN (321) 53
    LESSTHANEQUAL (322) 54
    GREATERTHANEQUAL (323) 55
    EQUALEQUAL (324) 57
    NOTEQUAL (325) 58
    BITWISE_XOR (326) 62
    BITWISE_OR (327) 64
    AND (328) 66
    OR (329) 68
    QUESTION (330) 70
    COLON (331) 70 188 189 190
    SEMICOLON (332) 87 88 198 199 205 206 211 212 213 214 215
    ELLIPSIS (333) 157
    ASSIGN (334) 73 100 130 172
    MULTIPLYASSIGN (335) 74
    DIVIDEASSIGN (336) 75
    MODASSIGN (337) 76
    ADDASSIGN (338) 77
    SUBTRACTASSIGN (339) 78
    LEFTSHIFTASSIGN (340) 79
    RIGHTSHIFTASSIGN (341) 80
    ANDASSIGN (342) 81
    XORASSIGN (343) 82
    ORASSIGN (344) 83
    COMMA (345) 22 26 85 98 123 128 157 159 163 167 169
    HASH (346)
    "then" (347)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <instr_number> (94)
        on left: 1
        on right: 66 68 70 188 195 200 201 203 204 205 206 207 208 209 210
    F (95)
        on left: 2
        on right: 207 208 209 210
    W (96)
        on left: 3
        on right: 203 204
    D (97)
        on left: 4
        on right: 205 206
    X (98)
        on left: 5
        on right: 191 203 204 207 208 209 210
    N <stat> (99)
        on left: 6
        on right: 70 200 201 207 208 209 210
    changetable (100)
        on left: 7
        on right: 147 149 191 203 204 207 208 209 210 220
    primary_expression <expr> (101)
        on left: 8 9 10 11 12 13
        on right: 14
    postfix_expression <A> (102)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 15 16 17 18 19 20 27
    argument_expression_list_opt <num_params> (103)
        on left: 23 24
        on right: 16
    argument_expression_list <num_params> (104)
        on left: 25 26
        on right: 23 26
    unary_expression <A> (105)
        on left: 27 28 29 30 31 32
        on right: 28 29 31 39 72
    unary_operator <unaryOp> (106)
        on left: 33 34 35 36 37 38
        on right: 30
    cast_expression <A> (107)
        on left: 39 40
        on right: 30 40 41 42 43 44
    multiplicative_expression <expr> (108)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    additive_expression <expr> (109)
        on left: 45 46 47
        on right: 46 47 48 49 50
    shift_expression <expr> (110)
        on left: 48 49 50
        on right: 49 50 51 52 53 54 55
    relational_expression <expr> (111)
        on left: 51 52 53 54 55
        on right: 52 53 54 55 56 57 58
    equality_expression <expr> (112)
        on left: 56 57 58
        on right: 57 58 59 60
    and_expression <expr> (113)
        on left: 59 60
        on right: 60 61 62
    exclusive_or_expression <expr> (114)
        on left: 61 62
        on right: 62 63 64
    inclusive_or_expression <expr> (115)
        on left: 63 64
        on right: 64 65 66
    logical_and_expression <expr> (116)
        on left: 65 66
        on right: 66 67 68
    logical_or_expression <expr> (117)
        on left: 67 68
        on right: 68 69 70
    conditional_expression <expr> (118)
        on left: 69 70
        on right: 70 71 86
    assignment_expression <expr> (119)
        on left: 71 72
        on right: 25 26 72 84 85 139 141 143 144 165
    assignment_operator (120)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 72
    expression <expr> (121)
        on left: 84 85
        on right: 13 15 70 85 198 200 201 202 203 204 205 206 207 208 209 210 214
    constant_expression (122)
        on left: 86
        on right: 130 175 189
    declaration (123)
        on left: 87 88
        on right: 196 207 209 219 221 222
    declaration_specifiers (124)
        on left: 89 90 91 92 93 94 95 96
        on right: 87 88 89 91 93 95 160 161 220
    init_declarator_list (125)
        on left: 97 98
        on right: 87 98
    init_declarator <symp> (126)
        on left: 99 100
        on right: 97 98
    storage_class_specifier (127)
        on left: 101 102 103 104
        on right: 89 90
    type_specifier (128)
        on left: 105 106 107 108 109 110 111 112 113 114 115 116 117
        on right: 91 92 118
    specifier_qualifier_list (129)
        on left: 118 119
        on right: 121 164
    specifier_qualifier_list_opt (130)
        on left: 120 121
        on right: 118 119
    enum_specifier (131)
        on left: 122 123 124
        on right: 117
    identifier_opt (132)
        on left: 125 126
        on right: 122 123
    enumerator_list (133)
        on left: 127 128
        on right: 122 123 128
    enumerator (134)
        on left: 129 130
        on right: 127 128
    type_qualifier (135)
        on left: 131 132 133
        on right: 93 94 119 154 155
    function_specifier (136)
        on left: 134
        on right: 95 96
    declarator <symp> (137)
        on left: 135 136
        on right: 99 100 138 160 220
    direct_declarator <symp> (138)
        on left: 137 138 139 140 141 142 143 144 145 146 147 148 149
        on right: 135 136 139 140 141 142 143 144 145 146 147 148 149
    type_qualifier_list_opt (139)
        on left: 150 151
        on right: 152 153
    pointer <sym_type> (140)
        on left: 152 153
        on right: 135 153
    type_qualifier_list (141)
        on left: 154 155
        on right: 139 140 143 145 151 155
    parameter_type_list (142)
        on left: 156 157
        on right: 147
    parameter_list (143)
        on left: 158 159
        on right: 156 157 159
    parameter_declaration (144)
        on left: 160 161
        on right: 158 159
    identifier_list (145)
        on left: 162 163
        on right: 148 163
    type_name (146)
        on left: 164
        on right: 21 22 32 40
    initializer <symp> (147)
        on left: 165 166 167
        on right: 100 168 169
    initializer_list (148)
        on left: 168 169
        on right: 21 22 166 167 169
    designation_opt (149)
        on left: 170 171
        on right: 168 169
    designation (150)
        on left: 172
        on right: 171
    designator_list (151)
        on left: 173 174
        on right: 172 174
    designator (152)
        on left: 175 176
        on right: 173 174
    statement <stat> (153)
        on left: 177 178 179 180 181 182
        on right: 188 189 190 197 200 201 202
    loop_statement <stat> (154)
        on left: 183 184 185 186 187
        on right: 203 205 207 208
    labeled_statement <stat> (155)
        on left: 188 189 190
        on right: 177 183
    compound_statement <stat> (156)
        on left: 191
        on right: 178
    block_item_list_opt <stat> (157)
        on left: 192 193
        on right: 191 204 206 209 210 220
    block_item_list <stat> (158)
        on left: 194 195
        on right: 193 195
    block_item <stat> (159)
        on left: 196 197
        on right: 194 195
    expression_statement <expr> (160)
        on left: 198 199
        on right: 179 184 207 208 209 210
    selection_statement <stat> (161)
        on left: 200 201 202
        on right: 180 185
    iteration_statement <stat> (162)
        on left: 203 204 205 206 207 208 209 210
        on right: 181 186
    jump_statement <stat> (163)
        on left: 211 212 213 214 215
        on right: 182 187
    translation_unit (164)
        on left: 216 217
        on right: 0 217
    external_declaration (165)
        on left: 218 219
        on right: 216 217
    function_definition (166)
        on left: 220
        on right: 218
    declaration_list (167)
        on left: 221 222
        on right: 222 224
    declaration_list_opt (168)
        on left: 223 224
        on right: 220


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  103 storage_class_specifier: AUTO .

    $default  reduce using rule 103 (storage_class_specifier)


State 2

  132 type_qualifier: RESTRICT .

    $default  reduce using rule 132 (type_qualifier)


State 3

  104 storage_class_specifier: REGISTER .

    $default  reduce using rule 104 (storage_class_specifier)


State 4

  106 type_specifier: CHAR .

    $default  reduce using rule 106 (type_specifier)


State 5

  131 type_qualifier: CONST .

    $default  reduce using rule 131 (type_qualifier)


State 6

  111 type_specifier: DOUBLE .

    $default  reduce using rule 111 (type_specifier)


State 7

  122 enum_specifier: ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  123               | ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  124               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 125 (identifier_opt)

    identifier_opt  go to state 33


State 8

  101 storage_class_specifier: EXTERN .

    $default  reduce using rule 101 (storage_class_specifier)


State 9

  110 type_specifier: FLOAT .

    $default  reduce using rule 110 (type_specifier)


State 10

  134 function_specifier: INLINE .

    $default  reduce using rule 134 (function_specifier)


State 11

  108 type_specifier: INT .

    $default  reduce using rule 108 (type_specifier)


State 12

  109 type_specifier: LONG .

    $default  reduce using rule 109 (type_specifier)


State 13

  107 type_specifier: SHORT .

    $default  reduce using rule 107 (type_specifier)


State 14

  112 type_specifier: SIGNED .

    $default  reduce using rule 112 (type_specifier)


State 15

  102 storage_class_specifier: STATIC .

    $default  reduce using rule 102 (storage_class_specifier)


State 16

  113 type_specifier: UNSIGNED .

    $default  reduce using rule 113 (type_specifier)


State 17

  105 type_specifier: VOID .

    $default  reduce using rule 105 (type_specifier)


State 18

  133 type_qualifier: VOLATILE .

    $default  reduce using rule 133 (type_qualifier)


State 19

  114 type_specifier: BOOL .

    $default  reduce using rule 114 (type_specifier)


State 20

  115 type_specifier: COMPLEX .

    $default  reduce using rule 115 (type_specifier)


State 21

  116 type_specifier: IMAGINARY .

    $default  reduce using rule 116 (type_specifier)


State 22

  219 external_declaration: declaration .

    $default  reduce using rule 219 (external_declaration)


State 23

   87 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   88            | declaration_specifiers . SEMICOLON
  220 function_definition: declaration_specifiers . declarator declaration_list_opt changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35
    MUL                 shift, and go to state 36
    SEMICOLON           shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 24

   89 declaration_specifiers: storage_class_specifier . declaration_specifiers
   90                       | storage_class_specifier .

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   91 declaration_specifiers: type_specifier . declaration_specifiers
   92                       | type_specifier .

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 92 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  117 type_specifier: enum_specifier .

    $default  reduce using rule 117 (type_specifier)


State 27

   93 declaration_specifiers: type_qualifier . declaration_specifiers
   94                       | type_qualifier .

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 94 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   95 declaration_specifiers: function_specifier . declaration_specifiers
   96                       | function_specifier .

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 96 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  217 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 47
    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  216 translation_unit: external_declaration .

    $default  reduce using rule 216 (translation_unit)


State 31

  218 external_declaration: function_definition .

    $default  reduce using rule 218 (external_declaration)


State 32

  124 enum_specifier: ENUM IDENTIFIER .
  126 identifier_opt: IDENTIFIER .

    CURLY_BRACKET_OPEN  reduce using rule 126 (identifier_opt)
    $default            reduce using rule 124 (enum_specifier)


State 33

  122 enum_specifier: ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  123               | ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 49


State 34

  137 direct_declarator: IDENTIFIER .

    $default  reduce using rule 137 (direct_declarator)


State 35

  138 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35
    MUL                 shift, and go to state 36

    declarator         go to state 50
    direct_declarator  go to state 41
    pointer            go to state 42


State 36

  152 pointer: MUL . type_qualifier_list_opt
  153        | MUL . type_qualifier_list_opt pointer

    RESTRICT  shift, and go to state 2
    CONST     shift, and go to state 5
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 150 (type_qualifier_list_opt)

    type_qualifier           go to state 51
    type_qualifier_list_opt  go to state 52
    type_qualifier_list      go to state 53


State 37

   88 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 88 (declaration)


State 38

   87 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   98 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 54
    COMMA      shift, and go to state 55


State 39

   97 init_declarator_list: init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 40

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer
  220 function_definition: declaration_specifiers declarator . declaration_list_opt changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ASSIGN     shift, and go to state 56

    CURLY_BRACKET_OPEN  reduce using rule 223 (declaration_list_opt)
    $default            reduce using rule 99 (init_declarator)

    declaration              go to state 57
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list         go to state 59
    declaration_list_opt     go to state 60


State 41

  136 declarator: direct_declarator .
  139 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  140                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  141                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  142                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  143                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  145                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  146                  | direct_declarator . SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  147                  | direct_declarator . ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  148                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  149                  | direct_declarator . ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 61
    ROUND_BRACKET_OPEN   shift, and go to state 62

    $default  reduce using rule 136 (declarator)


State 42

  135 declarator: pointer . direct_declarator

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35

    direct_declarator  go to state 63


State 43

   89 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 44

   91 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 91 (declaration_specifiers)


State 45

   93 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 93 (declaration_specifiers)


State 46

   95 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 95 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  217 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 217 (translation_unit)


State 49

  122 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list CURLY_BRACKET_CLOSE
  123               | ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 64

    enumerator_list  go to state 65
    enumerator       go to state 66


State 50

  138 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 67


State 51

  154 type_qualifier_list: type_qualifier .

    $default  reduce using rule 154 (type_qualifier_list)


State 52

  152 pointer: MUL type_qualifier_list_opt .
  153        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 36

    $default  reduce using rule 152 (pointer)

    pointer  go to state 68


State 53

  151 type_qualifier_list_opt: type_qualifier_list .
  155 type_qualifier_list: type_qualifier_list . type_qualifier

    RESTRICT  shift, and go to state 2
    CONST     shift, and go to state 5
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 151 (type_qualifier_list_opt)

    type_qualifier  go to state 69


State 54

   87 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 87 (declaration)


State 55

   98 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35
    MUL                 shift, and go to state 36

    init_declarator    go to state 70
    declarator         go to state 71
    direct_declarator  go to state 41
    pointer            go to state 42


State 56

  100 init_declarator: declarator ASSIGN . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 79
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 105


State 57

  221 declaration_list: declaration .

    $default  reduce using rule 221 (declaration_list)


State 58

   87 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   88            | declaration_specifiers . SEMICOLON

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35
    MUL                 shift, and go to state 36
    SEMICOLON           shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 71
    direct_declarator     go to state 41
    pointer               go to state 42


State 59

  222 declaration_list: declaration_list . declaration
  224 declaration_list_opt: declaration_list .

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 224 (declaration_list_opt)

    declaration              go to state 106
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 60

  220 function_definition: declaration_specifiers declarator declaration_list_opt . changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 7 (changetable)

    changetable  go to state 107


State 61

  139 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  140                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list SQUARE_BRACKET_CLOSE
  141                  | direct_declarator SQUARE_BRACKET_OPEN . assignment_expression SQUARE_BRACKET_CLOSE
  142                  | direct_declarator SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE
  143                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  145                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  146                  | direct_declarator SQUARE_BRACKET_OPEN . MUL SQUARE_BRACKET_CLOSE

    RESTRICT              shift, and go to state 2
    CONST                 shift, and go to state 5
    SIZEOF                shift, and go to state 72
    STATIC                shift, and go to state 108
    VOLATILE              shift, and go to state 18
    IDENTIFIER            shift, and go to state 73
    INT_CONSTANT          shift, and go to state 74
    FLOAT_CONSTANT        shift, and go to state 75
    CHAR_CONSTANT         shift, and go to state 76
    STRING_LITERAL        shift, and go to state 77
    SQUARE_BRACKET_CLOSE  shift, and go to state 109
    ROUND_BRACKET_OPEN    shift, and go to state 78
    INCREMENT             shift, and go to state 80
    DECREMENT             shift, and go to state 81
    BITWISE_AND           shift, and go to state 82
    MUL                   shift, and go to state 110
    PLUS                  shift, and go to state 84
    MINUS                 shift, and go to state 85
    BITWISE_NOT           shift, and go to state 86
    EXCLAIM               shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 111
    type_qualifier             go to state 51
    type_qualifier_list        go to state 112


State 62

  147 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . changetable parameter_type_list ROUND_BRACKET_CLOSE
  148                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list ROUND_BRACKET_CLOSE
  149                  | direct_declarator ROUND_BRACKET_OPEN . changetable ROUND_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 7 (changetable)

    changetable      go to state 114
    identifier_list  go to state 115


State 63

  135 declarator: pointer direct_declarator .
  139 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  140                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  141                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  142                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  143                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  145                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  146                  | direct_declarator . SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  147                  | direct_declarator . ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  148                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  149                  | direct_declarator . ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 61
    ROUND_BRACKET_OPEN   shift, and go to state 62

    $default  reduce using rule 135 (declarator)


State 64

  129 enumerator: IDENTIFIER .
  130           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 129 (enumerator)


State 65

  122 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . CURLY_BRACKET_CLOSE
  123               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . COMMA CURLY_BRACKET_CLOSE
  128 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 117
    COMMA                shift, and go to state 118


State 66

  127 enumerator_list: enumerator .

    $default  reduce using rule 127 (enumerator_list)


State 67

  138 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 138 (direct_declarator)


State 68

  153 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 153 (pointer)


State 69

  155 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 155 (type_qualifier_list)


State 70

   98 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 98 (init_declarator_list)


State 71

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 99 (init_declarator)


State 72

   31 unary_expression: SIZEOF . unary_expression
   32                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 119
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 120
    unary_operator      go to state 91


State 73

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 74

    9 primary_expression: INT_CONSTANT .

    $default  reduce using rule 9 (primary_expression)


State 75

   10 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 10 (primary_expression)


State 76

   11 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 11 (primary_expression)


State 77

   12 primary_expression: STRING_LITERAL .

    $default  reduce using rule 12 (primary_expression)


State 78

   13 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   21 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   40 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression

    RESTRICT            shift, and go to state 2
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    FLOAT               shift, and go to state 9
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 122
    type_specifier             go to state 123
    specifier_qualifier_list   go to state 124
    enum_specifier             go to state 26
    type_qualifier             go to state 125
    type_name                  go to state 126


State 79

  166 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    DOT                  shift, and go to state 128

    $default  reduce using rule 170 (designation_opt)

    initializer_list  go to state 129
    designation_opt   go to state 130
    designation       go to state 131
    designator_list   go to state 132
    designator        go to state 133


State 80

   28 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 134
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 135
    unary_operator      go to state 91


State 81

   29 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 134
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 136
    unary_operator      go to state 91


State 82

   33 unary_operator: BITWISE_AND .

    $default  reduce using rule 33 (unary_operator)


State 83

   34 unary_operator: MUL .

    $default  reduce using rule 34 (unary_operator)


State 84

   35 unary_operator: PLUS .

    $default  reduce using rule 35 (unary_operator)


State 85

   36 unary_operator: MINUS .

    $default  reduce using rule 36 (unary_operator)


State 86

   37 unary_operator: BITWISE_NOT .

    $default  reduce using rule 37 (unary_operator)


State 87

   38 unary_operator: EXCLAIM .

    $default  reduce using rule 38 (unary_operator)


State 88

   14 postfix_expression: primary_expression .

    $default  reduce using rule 14 (postfix_expression)


State 89

   15 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   16                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   17                   | postfix_expression . DOT IDENTIFIER
   18                   | postfix_expression . ARROW IDENTIFIER
   19                   | postfix_expression . INCREMENT
   20                   | postfix_expression . DECREMENT
   27 unary_expression: postfix_expression .

    SQUARE_BRACKET_OPEN  shift, and go to state 137
    ROUND_BRACKET_OPEN   shift, and go to state 138
    DOT                  shift, and go to state 139
    ARROW                shift, and go to state 140
    INCREMENT            shift, and go to state 141
    DECREMENT            shift, and go to state 142

    $default  reduce using rule 27 (unary_expression)


State 90

   39 cast_expression: unary_expression .
   72 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN            shift, and go to state 143
    MULTIPLYASSIGN    shift, and go to state 144
    DIVIDEASSIGN      shift, and go to state 145
    MODASSIGN         shift, and go to state 146
    ADDASSIGN         shift, and go to state 147
    SUBTRACTASSIGN    shift, and go to state 148
    LEFTSHIFTASSIGN   shift, and go to state 149
    RIGHTSHIFTASSIGN  shift, and go to state 150
    ANDASSIGN         shift, and go to state 151
    XORASSIGN         shift, and go to state 152
    ORASSIGN          shift, and go to state 153

    $default  reduce using rule 39 (cast_expression)

    assignment_operator  go to state 154


State 91

   30 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 155
    unary_operator      go to state 91
    cast_expression     go to state 156


State 92

   41 multiplicative_expression: cast_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 93

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   45 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 45 (additive_expression)


State 94

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   48 shift_expression: additive_expression .

    PLUS   shift, and go to state 160
    MINUS  shift, and go to state 161

    $default  reduce using rule 48 (shift_expression)


State 95

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   51 relational_expression: shift_expression .

    LEFTSHIFT   shift, and go to state 162
    RIGHTSHIFT  shift, and go to state 163

    $default  reduce using rule 51 (relational_expression)


State 96

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSTHANEQUAL shift_expression
   55                      | relational_expression . GREATERTHANEQUAL shift_expression
   56 equality_expression: relational_expression .

    LESSTHAN          shift, and go to state 164
    GREATERTHAN       shift, and go to state 165
    LESSTHANEQUAL     shift, and go to state 166
    GREATERTHANEQUAL  shift, and go to state 167

    $default  reduce using rule 56 (equality_expression)


State 97

   57 equality_expression: equality_expression . EQUALEQUAL relational_expression
   58                    | equality_expression . NOTEQUAL relational_expression
   59 and_expression: equality_expression .

    EQUALEQUAL  shift, and go to state 168
    NOTEQUAL    shift, and go to state 169

    $default  reduce using rule 59 (and_expression)


State 98

   60 and_expression: and_expression . BITWISE_AND equality_expression
   61 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 170

    $default  reduce using rule 61 (exclusive_or_expression)


State 99

   62 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   63 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 171

    $default  reduce using rule 63 (inclusive_or_expression)


State 100

   64 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   65 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 172

    $default  reduce using rule 65 (logical_and_expression)


State 101

   66 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   67 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 173

    $default  reduce using rule 67 (logical_or_expression)


State 102

   68 logical_or_expression: logical_or_expression . OR M logical_and_expression
   69 conditional_expression: logical_or_expression .
   70                       | logical_or_expression . N QUESTION M expression N COLON M conditional_expression

    OR  shift, and go to state 174

    QUESTION  reduce using rule 6 (N)
    $default  reduce using rule 69 (conditional_expression)

    N  go to state 175


State 103

   71 assignment_expression: conditional_expression .

    $default  reduce using rule 71 (assignment_expression)


State 104

  165 initializer: assignment_expression .

    $default  reduce using rule 165 (initializer)


State 105

  100 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 100 (init_declarator)


State 106

  222 declaration_list: declaration_list declaration .

    $default  reduce using rule 222 (declaration_list)


State 107

  220 function_definition: declaration_specifiers declarator declaration_list_opt changetable . CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 176


State 108

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  144                  | direct_declarator SQUARE_BRACKET_OPEN STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    RESTRICT            shift, and go to state 2
    CONST               shift, and go to state 5
    SIZEOF              shift, and go to state 72
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 177
    type_qualifier             go to state 51
    type_qualifier_list        go to state 178


State 109

  142 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 142 (direct_declarator)


State 110

   34 unary_operator: MUL .
  146 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 179

    $default  reduce using rule 34 (unary_operator)


State 111

  141 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 180


State 112

  139 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  140                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . SQUARE_BRACKET_CLOSE
  145                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . MUL SQUARE_BRACKET_CLOSE
  155 type_qualifier_list: type_qualifier_list . type_qualifier

    RESTRICT              shift, and go to state 2
    CONST                 shift, and go to state 5
    SIZEOF                shift, and go to state 72
    VOLATILE              shift, and go to state 18
    IDENTIFIER            shift, and go to state 73
    INT_CONSTANT          shift, and go to state 74
    FLOAT_CONSTANT        shift, and go to state 75
    CHAR_CONSTANT         shift, and go to state 76
    STRING_LITERAL        shift, and go to state 77
    SQUARE_BRACKET_CLOSE  shift, and go to state 181
    ROUND_BRACKET_OPEN    shift, and go to state 78
    INCREMENT             shift, and go to state 80
    DECREMENT             shift, and go to state 81
    BITWISE_AND           shift, and go to state 82
    MUL                   shift, and go to state 182
    PLUS                  shift, and go to state 84
    MINUS                 shift, and go to state 85
    BITWISE_NOT           shift, and go to state 86
    EXCLAIM               shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 183
    type_qualifier             go to state 69


State 113

  162 identifier_list: IDENTIFIER .

    $default  reduce using rule 162 (identifier_list)


State 114

  147 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable . parameter_type_list ROUND_BRACKET_CLOSE
  149                  | direct_declarator ROUND_BRACKET_OPEN changetable . ROUND_BRACKET_CLOSE

    AUTO                 shift, and go to state 1
    RESTRICT             shift, and go to state 2
    REGISTER             shift, and go to state 3
    CHAR                 shift, and go to state 4
    CONST                shift, and go to state 5
    DOUBLE               shift, and go to state 6
    ENUM                 shift, and go to state 7
    EXTERN               shift, and go to state 8
    FLOAT                shift, and go to state 9
    INLINE               shift, and go to state 10
    INT                  shift, and go to state 11
    LONG                 shift, and go to state 12
    SHORT                shift, and go to state 13
    SIGNED               shift, and go to state 14
    STATIC               shift, and go to state 15
    UNSIGNED             shift, and go to state 16
    VOID                 shift, and go to state 17
    VOLATILE             shift, and go to state 18
    BOOL                 shift, and go to state 19
    COMPLEX              shift, and go to state 20
    IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_CLOSE  shift, and go to state 184

    declaration_specifiers   go to state 185
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 186
    parameter_list           go to state 187
    parameter_declaration    go to state 188


State 115

  148 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list . ROUND_BRACKET_CLOSE
  163 identifier_list: identifier_list . COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 189
    COMMA                shift, and go to state 190


State 116

  130 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 191
    constant_expression        go to state 192


State 117

  122 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 122 (enum_specifier)


State 118

  123 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA . CURLY_BRACKET_CLOSE
  128 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER           shift, and go to state 64
    CURLY_BRACKET_CLOSE  shift, and go to state 193

    enumerator  go to state 194


State 119

   13 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   21 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   32 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    RESTRICT            shift, and go to state 2
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    FLOAT               shift, and go to state 9
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 122
    type_specifier             go to state 123
    specifier_qualifier_list   go to state 124
    enum_specifier             go to state 26
    type_qualifier             go to state 125
    type_name                  go to state 195


State 120

   31 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 121

   84 expression: assignment_expression .

    $default  reduce using rule 84 (expression)


State 122

   13 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   85 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 196
    COMMA                shift, and go to state 197


State 123

  118 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    RESTRICT   shift, and go to state 2
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    FLOAT      shift, and go to state 9
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 120 (specifier_qualifier_list_opt)

    type_specifier                go to state 123
    specifier_qualifier_list      go to state 198
    specifier_qualifier_list_opt  go to state 199
    enum_specifier                go to state 26
    type_qualifier                go to state 125


State 124

  164 type_name: specifier_qualifier_list .

    $default  reduce using rule 164 (type_name)


State 125

  119 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    RESTRICT   shift, and go to state 2
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    FLOAT      shift, and go to state 9
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 120 (specifier_qualifier_list_opt)

    type_specifier                go to state 123
    specifier_qualifier_list      go to state 198
    specifier_qualifier_list_opt  go to state 200
    enum_specifier                go to state 26
    type_qualifier                go to state 125


State 126

   21 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   40 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 201


State 127

  175 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 191
    constant_expression        go to state 202


State 128

  176 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 129

  166 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  169 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 204
    COMMA                shift, and go to state 205


State 130

  168 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 79
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 206


State 131

  171 designation_opt: designation .

    $default  reduce using rule 171 (designation_opt)


State 132

  172 designation: designator_list . ASSIGN
  174 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    DOT                  shift, and go to state 128
    ASSIGN               shift, and go to state 207

    designator  go to state 208


State 133

  173 designator_list: designator .

    $default  reduce using rule 173 (designator_list)


State 134

   13 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   21 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    RESTRICT            shift, and go to state 2
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    FLOAT               shift, and go to state 9
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 122
    type_specifier             go to state 123
    specifier_qualifier_list   go to state 124
    enum_specifier             go to state 26
    type_qualifier             go to state 125
    type_name                  go to state 209


State 135

   28 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 136

   29 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 137

   15 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 210


State 138

   16 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . argument_expression_list_opt ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    $default  reduce using rule 24 (argument_expression_list_opt)

    primary_expression            go to state 88
    postfix_expression            go to state 89
    argument_expression_list_opt  go to state 211
    argument_expression_list      go to state 212
    unary_expression              go to state 90
    unary_operator                go to state 91
    cast_expression               go to state 92
    multiplicative_expression     go to state 93
    additive_expression           go to state 94
    shift_expression              go to state 95
    relational_expression         go to state 96
    equality_expression           go to state 97
    and_expression                go to state 98
    exclusive_or_expression       go to state 99
    inclusive_or_expression       go to state 100
    logical_and_expression        go to state 101
    logical_or_expression         go to state 102
    conditional_expression        go to state 103
    assignment_expression         go to state 213


State 139

   17 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 214


State 140

   18 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 141

   19 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 19 (postfix_expression)


State 142

   20 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 20 (postfix_expression)


State 143

   73 assignment_operator: ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 144

   74 assignment_operator: MULTIPLYASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 145

   75 assignment_operator: DIVIDEASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 146

   76 assignment_operator: MODASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 147

   77 assignment_operator: ADDASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 148

   78 assignment_operator: SUBTRACTASSIGN .

    $default  reduce using rule 78 (assignment_operator)


State 149

   79 assignment_operator: LEFTSHIFTASSIGN .

    $default  reduce using rule 79 (assignment_operator)


State 150

   80 assignment_operator: RIGHTSHIFTASSIGN .

    $default  reduce using rule 80 (assignment_operator)


State 151

   81 assignment_operator: ANDASSIGN .

    $default  reduce using rule 81 (assignment_operator)


State 152

   82 assignment_operator: XORASSIGN .

    $default  reduce using rule 82 (assignment_operator)


State 153

   83 assignment_operator: ORASSIGN .

    $default  reduce using rule 83 (assignment_operator)


State 154

   72 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 216


State 155

   39 cast_expression: unary_expression .

    $default  reduce using rule 39 (cast_expression)


State 156

   30 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 30 (unary_expression)


State 157

   42 multiplicative_expression: multiplicative_expression MUL . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 155
    unary_operator      go to state 91
    cast_expression     go to state 217


State 158

   43 multiplicative_expression: multiplicative_expression DIV . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 155
    unary_operator      go to state 91
    cast_expression     go to state 218


State 159

   44 multiplicative_expression: multiplicative_expression MOD . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 155
    unary_operator      go to state 91
    cast_expression     go to state 219


State 160

   46 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 220


State 161

   47 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 221


State 162

   49 shift_expression: shift_expression LEFTSHIFT . additive_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 222


State 163

   50 shift_expression: shift_expression RIGHTSHIFT . additive_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 223


State 164

   52 relational_expression: relational_expression LESSTHAN . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 224


State 165

   53 relational_expression: relational_expression GREATERTHAN . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 225


State 166

   54 relational_expression: relational_expression LESSTHANEQUAL . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 226


State 167

   55 relational_expression: relational_expression GREATERTHANEQUAL . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 227


State 168

   57 equality_expression: equality_expression EQUALEQUAL . relational_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 228


State 169

   58 equality_expression: equality_expression NOTEQUAL . relational_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 229


State 170

   60 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 230


State 171

   62 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 231


State 172

   64 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 232


State 173

   66 logical_and_expression: logical_and_expression AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 233


State 174

   68 logical_or_expression: logical_or_expression OR . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 234


State 175

   70 conditional_expression: logical_or_expression N . QUESTION M expression N COLON M conditional_expression

    QUESTION  shift, and go to state 235


State 176

  220 function_definition: declaration_specifiers declarator declaration_list_opt changetable CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 255
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 177

  144 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 262


State 178

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  155 type_qualifier_list: type_qualifier_list . type_qualifier

    RESTRICT            shift, and go to state 2
    CONST               shift, and go to state 5
    SIZEOF              shift, and go to state 72
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 263
    type_qualifier             go to state 69


State 179

  146 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 146 (direct_declarator)


State 180

  141 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 141 (direct_declarator)


State 181

  140 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 140 (direct_declarator)


State 182

   34 unary_operator: MUL .
  145 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 264

    $default  reduce using rule 34 (unary_operator)


State 183

  139 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 265


State 184

  149 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE .

    $default  reduce using rule 149 (direct_declarator)


State 185

  160 parameter_declaration: declaration_specifiers . declarator
  161                      | declaration_specifiers .

    IDENTIFIER          shift, and go to state 34
    ROUND_BRACKET_OPEN  shift, and go to state 35
    MUL                 shift, and go to state 36

    $default  reduce using rule 161 (parameter_declaration)

    declarator         go to state 266
    direct_declarator  go to state 41
    pointer            go to state 42


State 186

  147 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 267


State 187

  156 parameter_type_list: parameter_list .
  157                    | parameter_list . COMMA ELLIPSIS
  159 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 268

    $default  reduce using rule 156 (parameter_type_list)


State 188

  158 parameter_list: parameter_declaration .

    $default  reduce using rule 158 (parameter_list)


State 189

  148 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 148 (direct_declarator)


State 190

  163 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 269


State 191

   86 constant_expression: conditional_expression .

    $default  reduce using rule 86 (constant_expression)


State 192

  130 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 130 (enumerator)


State 193

  123 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 123 (enum_specifier)


State 194

  128 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 128 (enumerator_list)


State 195

   21 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   32 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 270


State 196

   13 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 13 (primary_expression)


State 197

   85 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 271


State 198

  121 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 121 (specifier_qualifier_list_opt)


State 199

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 200

  119 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 119 (specifier_qualifier_list)


State 201

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   40 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 272
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 155
    unary_operator      go to state 91
    cast_expression     go to state 273


State 202

  175 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 274


State 203

  176 designator: DOT IDENTIFIER .

    $default  reduce using rule 176 (designator)


State 204

  166 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 166 (initializer)


State 205

  167 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  169 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    CURLY_BRACKET_CLOSE  shift, and go to state 275
    DOT                  shift, and go to state 128

    $default  reduce using rule 170 (designation_opt)

    designation_opt  go to state 276
    designation      go to state 131
    designator_list  go to state 132
    designator       go to state 133


State 206

  168 initializer_list: designation_opt initializer .

    $default  reduce using rule 168 (initializer_list)


State 207

  172 designation: designator_list ASSIGN .

    $default  reduce using rule 172 (designation)


State 208

  174 designator_list: designator_list designator .

    $default  reduce using rule 174 (designator_list)


State 209

   21 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 277


State 210

   15 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE
   85 expression: expression . COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 278
    COMMA                 shift, and go to state 197


State 211

   16 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 279


State 212

   23 argument_expression_list_opt: argument_expression_list .
   26 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 280

    $default  reduce using rule 23 (argument_expression_list_opt)


State 213

   25 argument_expression_list: assignment_expression .

    $default  reduce using rule 25 (argument_expression_list)


State 214

   17 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 17 (postfix_expression)


State 215

   18 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 216

   72 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 217

   42 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 218

   43 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 219

   44 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 220

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   46 additive_expression: additive_expression PLUS multiplicative_expression .

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 46 (additive_expression)


State 221

   42 multiplicative_expression: multiplicative_expression . MUL cast_expression
   43                          | multiplicative_expression . DIV cast_expression
   44                          | multiplicative_expression . MOD cast_expression
   47 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 47 (additive_expression)


State 222

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   49 shift_expression: shift_expression LEFTSHIFT additive_expression .

    PLUS   shift, and go to state 160
    MINUS  shift, and go to state 161

    $default  reduce using rule 49 (shift_expression)


State 223

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   50 shift_expression: shift_expression RIGHTSHIFT additive_expression .

    PLUS   shift, and go to state 160
    MINUS  shift, and go to state 161

    $default  reduce using rule 50 (shift_expression)


State 224

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   52 relational_expression: relational_expression LESSTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 162
    RIGHTSHIFT  shift, and go to state 163

    $default  reduce using rule 52 (relational_expression)


State 225

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   53 relational_expression: relational_expression GREATERTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 162
    RIGHTSHIFT  shift, and go to state 163

    $default  reduce using rule 53 (relational_expression)


State 226

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   54 relational_expression: relational_expression LESSTHANEQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 162
    RIGHTSHIFT  shift, and go to state 163

    $default  reduce using rule 54 (relational_expression)


State 227

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   55 relational_expression: relational_expression GREATERTHANEQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 162
    RIGHTSHIFT  shift, and go to state 163

    $default  reduce using rule 55 (relational_expression)


State 228

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSTHANEQUAL shift_expression
   55                      | relational_expression . GREATERTHANEQUAL shift_expression
   57 equality_expression: equality_expression EQUALEQUAL relational_expression .

    LESSTHAN          shift, and go to state 164
    GREATERTHAN       shift, and go to state 165
    LESSTHANEQUAL     shift, and go to state 166
    GREATERTHANEQUAL  shift, and go to state 167

    $default  reduce using rule 57 (equality_expression)


State 229

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSTHANEQUAL shift_expression
   55                      | relational_expression . GREATERTHANEQUAL shift_expression
   58 equality_expression: equality_expression NOTEQUAL relational_expression .

    LESSTHAN          shift, and go to state 164
    GREATERTHAN       shift, and go to state 165
    LESSTHANEQUAL     shift, and go to state 166
    GREATERTHANEQUAL  shift, and go to state 167

    $default  reduce using rule 58 (equality_expression)


State 230

   57 equality_expression: equality_expression . EQUALEQUAL relational_expression
   58                    | equality_expression . NOTEQUAL relational_expression
   60 and_expression: and_expression BITWISE_AND equality_expression .

    EQUALEQUAL  shift, and go to state 168
    NOTEQUAL    shift, and go to state 169

    $default  reduce using rule 60 (and_expression)


State 231

   60 and_expression: and_expression . BITWISE_AND equality_expression
   62 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 170

    $default  reduce using rule 62 (exclusive_or_expression)


State 232

   62 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   64 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 171

    $default  reduce using rule 64 (inclusive_or_expression)


State 233

   66 logical_and_expression: logical_and_expression AND M . inclusive_or_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 281


State 234

   68 logical_or_expression: logical_or_expression OR M . logical_and_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 282


State 235

   70 conditional_expression: logical_or_expression N QUESTION . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 283


State 236

  213 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 284


State 237

  189 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 191
    constant_expression        go to state 285


State 238

  212 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 286


State 239

  190 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 287


State 240

  205 iteration_statement: DO . D M loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  206                    | DO . D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 4 (D)

    D  go to state 288


State 241

  207 iteration_statement: FOR . F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR . F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR . F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR . F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 2 (F)

    F  go to state 289


State 242

  211 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 290


State 243

  200 selection_statement: IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  201                    | IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 291


State 244

  214 jump_statement: RETURN . expression SEMICOLON
  215               | RETURN . SEMICOLON

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 292

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 293


State 245

  202 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 294


State 246

  203 iteration_statement: WHILE . W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE . W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 3 (W)

    W  go to state 295


State 247

    8 primary_expression: IDENTIFIER .
  188 labeled_statement: IDENTIFIER . COLON M statement

    COLON  shift, and go to state 296

    $default  reduce using rule 8 (primary_expression)


State 248

  191 compound_statement: CURLY_BRACKET_OPEN . X changetable block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 5 (X)

    X  go to state 297


State 249

  199 expression_statement: SEMICOLON .

    $default  reduce using rule 199 (expression_statement)


State 250

   85 expression: expression . COMMA assignment_expression
  198 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 298
    COMMA      shift, and go to state 197


State 251

  196 block_item: declaration .

    $default  reduce using rule 196 (block_item)


State 252

  197 block_item: statement .

    $default  reduce using rule 197 (block_item)


State 253

  177 statement: labeled_statement .

    $default  reduce using rule 177 (statement)


State 254

  178 statement: compound_statement .

    $default  reduce using rule 178 (statement)


State 255

  220 function_definition: declaration_specifiers declarator declaration_list_opt changetable CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 299


State 256

  193 block_item_list_opt: block_item_list .
  195 block_item_list: block_item_list . M block_item

    CURLY_BRACKET_CLOSE  reduce using rule 193 (block_item_list_opt)
    $default             reduce using rule 1 (M)

    M  go to state 300


State 257

  194 block_item_list: block_item .

    $default  reduce using rule 194 (block_item_list)


State 258

  179 statement: expression_statement .

    $default  reduce using rule 179 (statement)


State 259

  180 statement: selection_statement .

    $default  reduce using rule 180 (statement)


State 260

  181 statement: iteration_statement .

    $default  reduce using rule 181 (statement)


State 261

  182 statement: jump_statement .

    $default  reduce using rule 182 (statement)


State 262

  144 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 144 (direct_declarator)


State 263

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 301


State 264

  145 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 145 (direct_declarator)


State 265

  139 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 139 (direct_declarator)


State 266

  160 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 160 (parameter_declaration)


State 267

  147 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 147 (direct_declarator)


State 268

  157 parameter_type_list: parameter_list COMMA . ELLIPSIS
  159 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    REGISTER   shift, and go to state 3
    CHAR       shift, and go to state 4
    CONST      shift, and go to state 5
    DOUBLE     shift, and go to state 6
    ENUM       shift, and go to state 7
    EXTERN     shift, and go to state 8
    FLOAT      shift, and go to state 9
    INLINE     shift, and go to state 10
    INT        shift, and go to state 11
    LONG       shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 302

    declaration_specifiers   go to state 185
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 303


State 269

  163 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 163 (identifier_list)


State 270

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   32 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    CURLY_BRACKET_OPEN  shift, and go to state 272

    $default  reduce using rule 32 (unary_expression)


State 271

   85 expression: expression COMMA assignment_expression .

    $default  reduce using rule 85 (expression)


State 272

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    DOT                  shift, and go to state 128

    $default  reduce using rule 170 (designation_opt)

    initializer_list  go to state 304
    designation_opt   go to state 130
    designation       go to state 131
    designator_list   go to state 132
    designator        go to state 133


State 273

   40 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 40 (cast_expression)


State 274

  175 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 175 (designator)


State 275

  167 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 167 (initializer)


State 276

  169 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 79
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 305


State 277

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 272


State 278

   15 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 15 (postfix_expression)


State 279

   16 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 16 (postfix_expression)


State 280

   26 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 306


State 281

   64 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   66 logical_and_expression: logical_and_expression AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 172

    $default  reduce using rule 66 (logical_and_expression)


State 282

   66 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   68 logical_or_expression: logical_or_expression OR M logical_and_expression .

    AND  shift, and go to state 173

    $default  reduce using rule 68 (logical_or_expression)


State 283

   70 conditional_expression: logical_or_expression N QUESTION M . expression N COLON M conditional_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 307


State 284

  213 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 213 (jump_statement)


State 285

  189 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 308


State 286

  212 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 212 (jump_statement)


State 287

  190 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 309
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 288

  205 iteration_statement: DO D . M loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  206                    | DO D . CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    CURLY_BRACKET_OPEN  shift, and go to state 310

    $default  reduce using rule 1 (M)

    M  go to state 311


State 289

  207 iteration_statement: FOR F . ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR F . ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F . ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR F . ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 312


State 290

  211 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 313


State 291

  200 selection_statement: IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N
  201                    | IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 314


State 292

  215 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 215 (jump_statement)


State 293

   85 expression: expression . COMMA assignment_expression
  214 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 315
    COMMA      shift, and go to state 197


State 294

  202 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 316


State 295

  203 iteration_statement: WHILE W . ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W . ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 317


State 296

  188 labeled_statement: IDENTIFIER COLON . M statement

    $default  reduce using rule 1 (M)

    M  go to state 318


State 297

  191 compound_statement: CURLY_BRACKET_OPEN X . changetable block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 7 (changetable)

    changetable  go to state 319


State 298

  198 expression_statement: expression SEMICOLON .

    $default  reduce using rule 198 (expression_statement)


State 299

  220 function_definition: declaration_specifiers declarator declaration_list_opt changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 220 (function_definition)


State 300

  195 block_item_list: block_item_list M . block_item

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item                 go to state 320
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 301

  143 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 143 (direct_declarator)


State 302

  157 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 157 (parameter_type_list)


State 303

  159 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 159 (parameter_list)


State 304

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
   22                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  169 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 321
    COMMA                shift, and go to state 322


State 305

  169 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 169 (initializer_list)


State 306

   26 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 26 (argument_expression_list)


State 307

   70 conditional_expression: logical_or_expression N QUESTION M expression . N COLON M conditional_expression
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 323


State 308

  189 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 324
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 309

  190 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 190 (labeled_statement)


State 310

  206 iteration_statement: DO D CURLY_BRACKET_OPEN . M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 325


State 311

  205 iteration_statement: DO D M . loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    loop_statement             go to state 326
    labeled_statement          go to state 327
    expression_statement       go to state 328
    selection_statement        go to state 329
    iteration_statement        go to state 330
    jump_statement             go to state 331


State 312

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN . X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR F ROUND_BRACKET_OPEN . X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN . X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR F ROUND_BRACKET_OPEN . X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 5 (X)

    X  go to state 332


State 313

  211 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 211 (jump_statement)


State 314

   85 expression: expression . COMMA assignment_expression
  200 selection_statement: IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N
  201                    | IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 333


State 315

  214 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 214 (jump_statement)


State 316

   85 expression: expression . COMMA assignment_expression
  202 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 334
    COMMA                shift, and go to state 197


State 317

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN . X changetable M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN . X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 5 (X)

    X  go to state 335


State 318

  188 labeled_statement: IDENTIFIER COLON M . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 336
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 319

  191 compound_statement: CURLY_BRACKET_OPEN X changetable . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 337
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 320

  195 block_item_list: block_item_list M block_item .

    $default  reduce using rule 195 (block_item_list)


State 321

   21 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 21 (postfix_expression)


State 322

   22 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  169 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    CURLY_BRACKET_CLOSE  shift, and go to state 338
    DOT                  shift, and go to state 128

    $default  reduce using rule 170 (designation_opt)

    designation_opt  go to state 276
    designation      go to state 131
    designator_list  go to state 132
    designator       go to state 133


State 323

   70 conditional_expression: logical_or_expression N QUESTION M expression N . COLON M conditional_expression

    COLON  shift, and go to state 339


State 324

  189 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 189 (labeled_statement)


State 325

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M . block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 340
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 326

  205 iteration_statement: DO D M loop_statement . M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 341


State 327

  183 loop_statement: labeled_statement .

    $default  reduce using rule 183 (loop_statement)


State 328

  184 loop_statement: expression_statement .

    $default  reduce using rule 184 (loop_statement)


State 329

  185 loop_statement: selection_statement .

    $default  reduce using rule 185 (loop_statement)


State 330

  186 loop_statement: iteration_statement .

    $default  reduce using rule 186 (loop_statement)


State 331

  187 loop_statement: jump_statement .

    $default  reduce using rule 187 (loop_statement)


State 332

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X . changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR F ROUND_BRACKET_OPEN X . changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X . changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR F ROUND_BRACKET_OPEN X . changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 7 (changetable)

    changetable  go to state 342


State 333

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N
  201                    | IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 343


State 334

  202 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 344
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 335

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X . changetable M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X . changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 7 (changetable)

    changetable  go to state 345


State 336

  188 labeled_statement: IDENTIFIER COLON M statement .

    $default  reduce using rule 188 (labeled_statement)


State 337

  191 compound_statement: CURLY_BRACKET_OPEN X changetable block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 346


State 338

   22 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 22 (postfix_expression)


State 339

   70 conditional_expression: logical_or_expression N QUESTION M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 347


State 340

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt . CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    CURLY_BRACKET_CLOSE  shift, and go to state 348


State 341

  205 iteration_statement: DO D M loop_statement M . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 349


State 342

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable . declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  208                    | FOR F ROUND_BRACKET_OPEN X changetable . expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable . declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  210                    | FOR F ROUND_BRACKET_OPEN X changetable . expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 350
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_statement       go to state 351


State 343

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N
  201                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 352


State 344

  202 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 202 (selection_statement)


State 345

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable . M expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X changetable . M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 353


State 346

  191 compound_statement: CURLY_BRACKET_OPEN X changetable block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 191 (compound_statement)


State 347

   70 conditional_expression: logical_or_expression N QUESTION M expression N COLON M . conditional_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 155
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 354


State 348

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE . M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 355


State 349

  205 iteration_statement: DO D M loop_statement M WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 356


State 350

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration . M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration . M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 357


State 351

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement . M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement . M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 358


State 352

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N
  201                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N ELSE M statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 359
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 353

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M . expression ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X changetable M . expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 360


State 354

   70 conditional_expression: logical_or_expression N QUESTION M expression N COLON M conditional_expression .

    $default  reduce using rule 70 (conditional_expression)


State 355

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 361


State 356

  205 iteration_statement: DO D M loop_statement M WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 362


State 357

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M . expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M . expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    expression_statement       go to state 363


State 358

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M . expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M . expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    expression_statement       go to state 364


State 359

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N
  201                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N ELSE M statement

    $default  reduce using rule 6 (N)

    N  go to state 365


State 360

   85 expression: expression . COMMA assignment_expression
  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression . ROUND_BRACKET_CLOSE M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X changetable M expression . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 366
    COMMA                shift, and go to state 197


State 361

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 367


State 362

   85 expression: expression . COMMA assignment_expression
  205 iteration_statement: DO D M loop_statement M WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 368
    COMMA                shift, and go to state 197


State 363

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement . M expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement . M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 369


State 364

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement . M expression N ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement . M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 370


State 365

  200 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N .
  201                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N . ELSE M statement

    ELSE  shift, and go to state 371

    $default  reduce using rule 200 (selection_statement)


State 366

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE . M loop_statement
  204                    | WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 372

    $default  reduce using rule 1 (M)

    M  go to state 373


State 367

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 374


State 368

  205 iteration_statement: DO D M loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 375


State 369

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M . expression N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M . expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 376


State 370

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M . expression N ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M . expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 377


State 371

  201 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 378


State 372

  204 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 379


State 373

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE M . loop_statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    loop_statement             go to state 380
    labeled_statement          go to state 327
    expression_statement       go to state 328
    selection_statement        go to state 329
    iteration_statement        go to state 330
    jump_statement             go to state 331


State 374

   85 expression: expression . COMMA assignment_expression
  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 381
    COMMA                shift, and go to state 197


State 375

  205 iteration_statement: DO D M loop_statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 205 (iteration_statement)


State 376

   85 expression: expression . COMMA assignment_expression
  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression . N ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression . N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 382


State 377

   85 expression: expression . COMMA assignment_expression
  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression . N ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression . N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    COMMA  shift, and go to state 197

    $default  reduce using rule 6 (N)

    N  go to state 383


State 378

  201 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M . statement

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    statement                  go to state 384
    labeled_statement          go to state 253
    compound_statement         go to state 254
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 379

  204 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 385
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 380

  203 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE M loop_statement .

    $default  reduce using rule 203 (iteration_statement)


State 381

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 386


State 382

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N . ROUND_BRACKET_CLOSE M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N . ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 387


State 383

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N . ROUND_BRACKET_CLOSE M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N . ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 388


State 384

  201 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement .

    $default  reduce using rule 201 (selection_statement)


State 385

  204 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 389


State 386

  206 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 206 (iteration_statement)


State 387

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE . M loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE . M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 390


State 388

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE . M loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE . M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 391


State 389

  204 iteration_statement: WHILE W ROUND_BRACKET_OPEN X changetable M expression ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 204 (iteration_statement)


State 390

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M . loop_statement
  209                    | FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M . CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 392
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    loop_statement             go to state 393
    labeled_statement          go to state 327
    expression_statement       go to state 328
    selection_statement        go to state 329
    iteration_statement        go to state 330
    jump_statement             go to state 331


State 391

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M . loop_statement
  210                    | FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M . CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    RETURN              shift, and go to state 244
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 245
    WHILE               shift, and go to state 246
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 394
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    loop_statement             go to state 395
    labeled_statement          go to state 327
    expression_statement       go to state 328
    selection_statement        go to state 329
    iteration_statement        go to state 330
    jump_statement             go to state 331


State 392

  209 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 396
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 393

  207 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement .

    $default  reduce using rule 207 (iteration_statement)


State 394

  210 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    RESTRICT            shift, and go to state 2
    REGISTER            shift, and go to state 3
    BREAK               shift, and go to state 236
    CASE                shift, and go to state 237
    CHAR                shift, and go to state 4
    CONST               shift, and go to state 5
    CONTINUE            shift, and go to state 238
    DEFAULT             shift, and go to state 239
    DO                  shift, and go to state 240
    DOUBLE              shift, and go to state 6
    ENUM                shift, and go to state 7
    EXTERN              shift, and go to state 8
    FLOAT               shift, and go to state 9
    FOR                 shift, and go to state 241
    GOTO                shift, and go to state 242
    IF                  shift, and go to state 243
    INLINE              shift, and go to state 10
    INT                 shift, and go to state 11
    LONG                shift, and go to state 12
    RETURN              shift, and go to state 244
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 245
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 246
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 247
    INT_CONSTANT        shift, and go to state 74
    FLOAT_CONSTANT      shift, and go to state 75
    CHAR_CONSTANT       shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    ROUND_BRACKET_OPEN  shift, and go to state 78
    CURLY_BRACKET_OPEN  shift, and go to state 248
    INCREMENT           shift, and go to state 80
    DECREMENT           shift, and go to state 81
    BITWISE_AND         shift, and go to state 82
    MUL                 shift, and go to state 83
    PLUS                shift, and go to state 84
    MINUS               shift, and go to state 85
    BITWISE_NOT         shift, and go to state 86
    EXCLAIM             shift, and go to state 87
    SEMICOLON           shift, and go to state 249

    $default  reduce using rule 192 (block_item_list_opt)

    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    logical_or_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 121
    expression                 go to state 250
    declaration                go to state 251
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 252
    labeled_statement          go to state 253
    compound_statement         go to state 254
    block_item_list_opt        go to state 397
    block_item_list            go to state 256
    block_item                 go to state 257
    expression_statement       go to state 258
    selection_statement        go to state 259
    iteration_statement        go to state 260
    jump_statement             go to state 261


State 395

  208 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M loop_statement .

    $default  reduce using rule 208 (iteration_statement)


State 396

  209 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 398


State 397

  210 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 399


State 398

  209 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable declaration M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 209 (iteration_statement)


State 399

  210 iteration_statement: FOR F ROUND_BRACKET_OPEN X changetable expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 210 (iteration_statement)
